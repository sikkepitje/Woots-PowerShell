#
#   following code is generated by: WootsModuleCodeGenerator.ps1
#   
#


# Assignments: GET /api/v2/assignments/{id} (Show assignment)
Function Get-WootsAssignment($id) { return Get-WootsResourceById -resource "assignments" -id $id }
# Assignments: GET /api/v2/background_jobs (List background jobs)
Function Invoke-WootsGET__api_v2_background_jobs() { Throw "This function is not yet implemented"}
# Assignments: GET /api/v2/background_jobs/{id} (Show background job)
Function Get-WootsBackgroundJob($id) { return Get-WootsResourceById -resource "background_jobs" -id $id }
# Blueprints: GET /api/v2/blueprints/{id} (Show blueprint)
Function Get-WootsBlueprint($id) { return Get-WootsResourceById -resource "blueprints" -id $id }
# Classes: GET /api/v2/classes/{id} (Show class)
Function Get-WootsClass($id) { return Get-WootsResourceById -resource "classes" -id $id }
# Comments: GET /api/v2/comments (List comments)
Function Invoke-WootsGET__api_v2_comments() { Throw "This function is not yet implemented"}
# Comments: GET /api/v2/comments/{id} (Show comment)
Function Get-WootsComment($id) { return Get-WootsResourceById -resource "comments" -id $id }
# Courses: GET /api/v2/courses/{id} (Show course)
Function Get-WootsCourse($id) { return Get-WootsResourceById -resource "courses" -id $id }
# Courses users: GET /api/v2/courses_users/{id} (Show courses user)
Function Get-WootsCoursesUser($id) { return Get-WootsResourceById -resource "courses_users" -id $id }
# Departments: GET /api/v2/departments/{id} (Show department)
Function Get-WootsDepartment($id) { return Get-WootsResourceById -resource "departments" -id $id }
# Domains: GET /api/v2/domains/{id} (Show domain)
Function Get-WootsDomain($id) { return Get-WootsResourceById -resource "domains" -id $id }
# Exercises: GET /api/v2/exercises/{id} (Show exercise)
Function Get-WootsExercise($id) { return Get-WootsResourceById -resource "exercises" -id $id }
# Groups: GET /api/v2/groups/{id} (Show group)
Function Get-WootsGroup($id) { return Get-WootsResourceById -resource "groups" -id $id }
# Assignment labels: GET /api/v2/labels/{id} (Show assignment label)
Function Get-WootsLabel($id) { return Get-WootsResourceById -resource "labels" -id $id }
# Locations: GET /api/v2/locations/{id} (Show Location)
Function Get-WootsLocation($id) { return Get-WootsResourceById -resource "locations" -id $id }
# Notifications: GET /api/v2/notifications (List notifications)
Function Invoke-WootsGET__api_v2_notifications() { Throw "This function is not yet implemented"}
# Notifications: GET /api/v2/notifications/{id} (Show notification)
Function Get-WootsNotification($id) { return Get-WootsResourceById -resource "notifications" -id $id }
# Objectives: GET /api/v2/objectives/{id} (Show objective)
Function Get-WootsObjective($id) { return Get-WootsResourceById -resource "objectives" -id $id }
# Periods: GET /api/v2/periods/{id} (Show period)
Function Get-WootsPeriod($id) { return Get-WootsResourceById -resource "periods" -id $id }
# Plans: GET /api/v2/plans/{id} (Show plan)
Function Get-WootsPlan($id) { return Get-WootsResourceById -resource "plans" -id $id }
# Publication timeslots: GET /api/v2/publication_timeslots/{id} (Show publication timeslot)
Function Get-WootsPublicationTimeslot($id) { return Get-WootsResourceById -resource "publication_timeslots" -id $id }
# Qti: GET /api/v2/qti/results/{id} (QTI export)
Function Invoke-WootsGET__api_v2_qti_results__id_() { Throw "This function is not yet implemented"}
# Question bank assignments: GET /api/v2/question_bank_assignments/{id} (Show question bank assignment)
Function Get-WootsQuestionBankAssignment($id) { return Get-WootsResourceById -resource "question_bank_assignments" -id $id }
# Question bank exercises: GET /api/v2/question_bank_exercises/{id} (Show question bank exercise)
Function Get-WootsQuestionBankExercise($id) { return Get-WootsResourceById -resource "question_bank_exercises" -id $id }
# Question bank labels: GET /api/v2/question_bank_labels/{id} (Show question bank label)
Function Get-WootsQuestionBankLabel($id) { return Get-WootsResourceById -resource "question_bank_labels" -id $id }
# Question banks: GET /api/v2/question_banks (List question banks)
Function Invoke-WootsGET__api_v2_question_banks() { Throw "This function is not yet implemented"}
# Question banks: GET /api/v2/question_banks/{id} (Show question bank)
Function Get-WootsQuestionBank($id) { return Get-WootsResourceById -resource "question_banks" -id $id }
# Questions: GET /api/v2/questions/{id} (Show question)
Function Get-WootsQuestion($id) { return Get-WootsResourceById -resource "questions" -id $id }
# Requirements: GET /api/v2/requirements/{id}/ (Show requirement)
Function Get-WootsRequirement($id) { return Get-WootsResourceById -resource "requirements" -id $id }
# Results: GET /api/v2/results/{id} (Show result)
Function Get-WootsResult($id) { return Get-WootsResourceById -resource "results" -id $id }
# Schools: GET /api/v2/schools/{id} (Show school)
Function Get-WootsSchool($id) { return Get-WootsResourceById -resource "schools" -id $id }
# Score marks: GET /api/v2/score_marks/{id} (Show score mark)
Function Get-WootsScoreMark($id) { return Get-WootsResourceById -resource "score_marks" -id $id }
# Search: GET /api/v2/search/assignments (Search assignments)
Function Search-WootsAssignment($parameter) {return Search-WootsResource -resource "assignments" -parameter $parameter}
# Search: GET /api/v2/search/courses (Search courses)
Function Search-WootsCourse($parameter) {return Search-WootsResource -resource "courses" -parameter $parameter}
# Search: GET /api/v2/search/groups (Search groups)
Function Search-WootsGroup($parameter) {return Search-WootsResource -resource "groups" -parameter $parameter}
# Search: GET /api/v2/search/question_bank_assignments (Search question bank assignments)
Function Search-WootsQuestionBankAssignment($parameter) {return Search-WootsResource -resource "question_bank_assignments" -parameter $parameter}
# Search: GET /api/v2/search/question_banks (Search question banks)
Function Search-WootsQuestionBank($parameter) {return Search-WootsResource -resource "question_banks" -parameter $parameter}
# Search: GET /api/v2/search/results (Search results)
Function Search-WootsResult($parameter) {return Search-WootsResource -resource "results" -parameter $parameter}
# Search: GET /api/v2/search/timeslots (Search timeslots)
Function Search-WootsTimeslot($parameter) {return Search-WootsResource -resource "timeslots" -parameter $parameter}
# Search: GET /api/v2/search/users (Search users)
Function Search-WootsUser($parameter) {return Search-WootsResource -resource "users" -parameter $parameter}
# Studies: GET /api/v2/studies/{id} (Show study)
Function Get-WootsStudy($id) { return Get-WootsResourceById -resource "studies" -id $id }
# Submissions: GET /api/v2/submissions/{id} (Show submission)
Function Get-WootsSubmission($id) { return Get-WootsResourceById -resource "submissions" -id $id }
# Subscriptions: GET /api/v2/subscriptions/{id} (Show subscription)
Function Get-WootsSubscription($id) { return Get-WootsResourceById -resource "subscriptions" -id $id }
# Tasks: GET /api/v2/tasks/{id} (Show task)
Function Get-WootsTask($id) { return Get-WootsResourceById -resource "tasks" -id $id }
# Timeslots: GET /api/v2/timeslots/{id} (Show timeslot)
Function Get-WootsTimeslot($id) { return Get-WootsResourceById -resource "timeslots" -id $id }
# Users: GET /api/v2/users/{id} (Show user)
Function Get-WootsUser($id) { return Get-WootsResourceById -resource "users" -id $id }
# Webhooks: GET /api/v2/webhooks/ (List webhooks)
Function Invoke-WootsGET__api_v2_webhooks_() { Throw "This function is not yet implemented"}
# Webhooks: GET /api/v2/webhooks/{id} (Show webhook)
Function Get-WootsWebhook($id) { return Get-WootsResourceById -resource "webhooks" -id $id }
# Assignments: PATCH /api/v2/assignments/{id} (Update assignment)
Function Set-WootsAssignment($id,$parameter) {return Set-WootsResourceById -resource "assignments" -id $id -parameter $parameter}
# Assignments: PATCH /api/v2/background_jobs/{id} (Update background job)
Function Set-WootsBackgroundJob($id,$parameter) {return Set-WootsResourceById -resource "background_jobs" -id $id -parameter $parameter}
# Classes: PATCH /api/v2/classes/{id} (Update class)
Function Set-WootsClass($id,$parameter) {return Set-WootsResourceById -resource "classes" -id $id -parameter $parameter}
# Comments: PATCH /api/v2/comments/{id} (Update comment)
Function Set-WootsComment($id,$parameter) {return Set-WootsResourceById -resource "comments" -id $id -parameter $parameter}
# Courses: PATCH /api/v2/courses/{id} (Update course)
Function Set-WootsCourse($id,$parameter) {return Set-WootsResourceById -resource "courses" -id $id -parameter $parameter}
# Courses users: PATCH /api/v2/courses_users/{id} (Update courses user)
Function Set-WootsCoursesUser($id,$parameter) {return Set-WootsResourceById -resource "courses_users" -id $id -parameter $parameter}
# Departments: PATCH /api/v2/departments/{id} (Update department)
Function Set-WootsDepartment($id,$parameter) {return Set-WootsResourceById -resource "departments" -id $id -parameter $parameter}
# Domains: PATCH /api/v2/domains/{id} (Update domain)
Function Set-WootsDomain($id,$parameter) {return Set-WootsResourceById -resource "domains" -id $id -parameter $parameter}
# Exercises: PATCH /api/v2/exercises/{id} (Update exercise)
Function Set-WootsExercise($id,$parameter) {return Set-WootsResourceById -resource "exercises" -id $id -parameter $parameter}
# Groups: PATCH /api/v2/groups/{id} (Update group)
Function Set-WootsGroup($id,$parameter) {return Set-WootsResourceById -resource "groups" -id $id -parameter $parameter}
# Assignment labels: PATCH /api/v2/labels/{id} (Update assignment label)
Function Set-WootsLabel($id,$parameter) {return Set-WootsResourceById -resource "labels" -id $id -parameter $parameter}
# Locations: PATCH /api/v2/locations/{id} (Update location)
Function Set-WootsLocation($id,$parameter) {return Set-WootsResourceById -resource "locations" -id $id -parameter $parameter}
# Objectives: PATCH /api/v2/objectives/{id} (Update objective)
Function Set-WootsObjective($id,$parameter) {return Set-WootsResourceById -resource "objectives" -id $id -parameter $parameter}
# Periods: PATCH /api/v2/periods/{id} (Update period)
Function Set-WootsPeriod($id,$parameter) {return Set-WootsResourceById -resource "periods" -id $id -parameter $parameter}
# Plans: PATCH /api/v2/plans/{id} (Update plan)
Function Set-WootsPlan($id,$parameter) {return Set-WootsResourceById -resource "plans" -id $id -parameter $parameter}
# Publication timeslots: PATCH /api/v2/publication_timeslots/{id} (Update publication timeslot)
Function Set-WootsPublicationTimeslot($id,$parameter) {return Set-WootsResourceById -resource "publication_timeslots" -id $id -parameter $parameter}
# Question bank assignments: PATCH /api/v2/question_bank_assignments/{id} (Update question bank assignment)
Function Set-WootsQuestionBankAssignment($id,$parameter) {return Set-WootsResourceById -resource "question_bank_assignments" -id $id -parameter $parameter}
# Question bank exercises: PATCH /api/v2/question_bank_exercises/{id} (Update question bank exercise)
Function Set-WootsQuestionBankExercise($id,$parameter) {return Set-WootsResourceById -resource "question_bank_exercises" -id $id -parameter $parameter}
# Question bank labels: PATCH /api/v2/question_bank_labels/{id} (Update question bank label)
Function Set-WootsQuestionBankLabel($id,$parameter) {return Set-WootsResourceById -resource "question_bank_labels" -id $id -parameter $parameter}
# Question banks: PATCH /api/v2/question_banks/{id} (Update question bank)
Function Set-WootsQuestionBank($id,$parameter) {return Set-WootsResourceById -resource "question_banks" -id $id -parameter $parameter}
# Questions: PATCH /api/v2/questions/{id} (Update question)
Function Set-WootsQuestion($id,$parameter) {return Set-WootsResourceById -resource "questions" -id $id -parameter $parameter}
# Requirements: PATCH /api/v2/requirements/{id}/ (Update requirement)
Function Set-WootsRequirement($id,$parameter) {return Set-WootsResourceById -resource "requirements" -id $id -parameter $parameter}
# Results: PATCH /api/v2/results/{id} (Update result)
Function Set-WootsResult($id,$parameter) {return Set-WootsResourceById -resource "results" -id $id -parameter $parameter}
# Schools: PATCH /api/v2/schools/{id} (Update school)
Function Set-WootsSchool($id,$parameter) {return Set-WootsResourceById -resource "schools" -id $id -parameter $parameter}
# Score marks: PATCH /api/v2/score_marks/{id} (Update score mark)
Function Set-WootsScoreMark($id,$parameter) {return Set-WootsResourceById -resource "score_marks" -id $id -parameter $parameter}
# Studies: PATCH /api/v2/studies/{id} (Update study)
Function Set-WootsStudy($id,$parameter) {return Set-WootsResourceById -resource "studies" -id $id -parameter $parameter}
# Submissions: PATCH /api/v2/submissions/{id} (Update submission)
Function Set-WootsSubmission($id,$parameter) {return Set-WootsResourceById -resource "submissions" -id $id -parameter $parameter}
# Subscriptions: PATCH /api/v2/subscriptions/{id} (Update subscription)
Function Set-WootsSubscription($id,$parameter) {return Set-WootsResourceById -resource "subscriptions" -id $id -parameter $parameter}
# Tasks: PATCH /api/v2/tasks/{id} (Update task)
Function Set-WootsTask($id,$parameter) {return Set-WootsResourceById -resource "tasks" -id $id -parameter $parameter}
# Timeslots: PATCH /api/v2/timeslots/{id} (Update timeslot)
Function Set-WootsTimeslot($id,$parameter) {return Set-WootsResourceById -resource "timeslots" -id $id -parameter $parameter}
# Users: PATCH /api/v2/users/{id} (Update user)
Function Set-WootsUser($id,$parameter) {return Set-WootsResourceById -resource "users" -id $id -parameter $parameter}
# Webhooks: PATCH /api/v2/webhooks/{id} (Update webhook)
Function Set-WootsWebhook($id,$parameter) {return Set-WootsResourceById -resource "webhooks" -id $id -parameter $parameter}
# Comments: POST /api/v2/comments (Create comment)
Function Invoke-WootsPOST__api_v2_comments() { Throw "This function is not yet implemented"}
# Question banks: POST /api/v2/question_banks (Create question bank)
Function Invoke-WootsPOST__api_v2_question_banks() { Throw "This function is not yet implemented"}
# Webhooks: POST /api/v2/webhooks/ (Create webhook)
Function Invoke-WootsPOST__api_v2_webhooks_() { Throw "This function is not yet implemented"}
# Exercises: POST /api/v2/assignments/{assignment_id}/exercises (Create exercise)
Function Add-WootsAssignmentExercise($id,$parameter) {return Add-WootsResourceItem -resource "assignments" -id $id -parameter $parameter}
# Publication timeslots: POST /api/v2/assignments/{assignment_id}/publication_timeslots (Create publication timeslot)
Function Add-WootsAssignmentPublicationTimeslot($id,$parameter) {return Add-WootsResourceItem -resource "assignments" -id $id -parameter $parameter}
# Requirements: POST /api/v2/assignments/{assignment_id}/requirements (Create requirement)
Function Add-WootsAssignmentRequirement($id,$parameter) {return Add-WootsResourceItem -resource "assignments" -id $id -parameter $parameter}
# Score marks: POST /api/v2/assignments/{assignment_id}/score_marks (Create score mark)
Function Add-WootsAssignmentScoreMark($id,$parameter) {return Add-WootsResourceItem -resource "assignments" -id $id -parameter $parameter}
# Tasks: POST /api/v2/assignments/{assignment_id}/tasks (Create assignment task)
Function Add-WootsAssignmentTask($id,$parameter) {return Add-WootsResourceItem -resource "assignments" -id $id -parameter $parameter}
# Timeslots: POST /api/v2/assignments/{assignment_id}/timeslots (Create timeslot)
Function Add-WootsAssignmentTimeslot($id,$parameter) {return Add-WootsResourceItem -resource "assignments" -id $id -parameter $parameter}
# Assignments: POST /api/v2/courses/{course_id}/assignments (Create assignment)
Function Add-WootsCourseAssignment($id,$parameter) {return Add-WootsResourceItem -resource "courses" -id $id -parameter $parameter}
# Courses users: POST /api/v2/courses/{course_id}/courses_users (Add user to course)
Function Add-WootsCourseCoursesUser($id,$parameter) {return Add-WootsResourceItem -resource "courses" -id $id -parameter $parameter}
# Domains: POST /api/v2/courses/{course_id}/domains (Create course domain)
Function Add-WootsCourseDomain($id,$parameter) {return Add-WootsResourceItem -resource "courses" -id $id -parameter $parameter}
# Groups: POST /api/v2/courses/{course_id}/groups (Create group)
Function Add-WootsCourseGroup($id,$parameter) {return Add-WootsResourceItem -resource "courses" -id $id -parameter $parameter}
# Studies: POST /api/v2/departments/{department_id}/studies (Create study)
Function Add-WootsDepartmentStudy($id,$parameter) {return Add-WootsResourceItem -resource "departments" -id $id -parameter $parameter}
# Objectives: POST /api/v2/domains/{domain_id}/objectives (Create objective)
Function Add-WootsDomainObjective($id,$parameter) {return Add-WootsResourceItem -resource "domains" -id $id -parameter $parameter}
# Questions: POST /api/v2/exercises/{exercise_id}/questions (Create question)
Function Add-WootsExerciseQuestion($id,$parameter) {return Add-WootsResourceItem -resource "exercises" -id $id -parameter $parameter}
# Groups users: POST /api/v2/groups/{group_id}/groups_users (Add user to group)
Function Add-WootsGroupGroupsUser($id,$parameter) {return Add-WootsResourceItem -resource "groups" -id $id -parameter $parameter}
# Subscriptions: POST /api/v2/plans/{plan_id}/subscriptions (Create subscription)
Function Add-WootsPlanSubscription($id,$parameter) {return Add-WootsResourceItem -resource "plans" -id $id -parameter $parameter}
# Plans: POST /api/v2/publishers/{publisher_id}/plans (Create plan)
Function Add-WootsPublisherPlan($id,$parameter) {return Add-WootsResourceItem -resource "publishers" -id $id -parameter $parameter}
# Score marks: POST /api/v2/question_bank_assignments/{question_bank_assignment_id}/score_marks (Create question bank assignment score mark)
Function Add-WootsQuestionBankAssignmentScoreMark($id,$parameter) {return Add-WootsResourceItem -resource "question_bank_assignments" -id $id -parameter $parameter}
# Domains: POST /api/v2/question_banks/{question_bank_id}/domains (Create question bank domain)
Function Add-WootsQuestionBankDomain($id,$parameter) {return Add-WootsResourceItem -resource "question_banks" -id $id -parameter $parameter}
# Question bank assignments: POST /api/v2/question_banks/{question_bank_id}/question_bank_assignments (Create question bank assignment)
Function Add-WootsQuestionBankQuestionBankAssignment($id,$parameter) {return Add-WootsResourceItem -resource "question_banks" -id $id -parameter $parameter}
# Question bank exercises: POST /api/v2/question_banks/{question_bank_id}/question_bank_exercises (Create question bank exercise)
Function Add-WootsQuestionBankQuestionBankExercise($id,$parameter) {return Add-WootsResourceItem -resource "question_banks" -id $id -parameter $parameter}
# Question bank labels: POST /api/v2/question_banks/{question_bank_id}/question_bank_labels (Create question bank label)
Function Add-WootsQuestionBankQuestionBankLabel($id,$parameter) {return Add-WootsResourceItem -resource "question_banks" -id $id -parameter $parameter}
# Tasks: POST /api/v2/question_banks/{question_bank_id}/tasks (Create question bank task)
Function Add-WootsQuestionBankTask($id,$parameter) {return Add-WootsResourceItem -resource "question_banks" -id $id -parameter $parameter}
# Courses users: POST /api/v2/users/{user_id}/courses_users (Add user to course)
Function Add-WootsUserCoursesUser($id,$parameter) {return Add-WootsResourceItem -resource "users" -id $id -parameter $parameter}
# Groups users: POST /api/v2/users/{user_id}/groups_users (Add user to group)
Function Add-WootsUserGroupsUser($id,$parameter) {return Add-WootsResourceItem -resource "users" -id $id -parameter $parameter}
# Classes: POST /api/v2/schools/{school_id}/classes (Create classes)
Function Add-WootsClass($parameter) {return Add-WootsSchoolResource -resource "classes" -parameter $parameter}
# Courses: POST /api/v2/schools/{school_id}/courses (Create course)
Function Add-WootsCourse($parameter) {return Add-WootsSchoolResource -resource "courses" -parameter $parameter}
# Departments: POST /api/v2/schools/{school_id}/departments (Create department)
Function Add-WootsDepartment($parameter) {return Add-WootsSchoolResource -resource "departments" -parameter $parameter}
# Assignment labels: POST /api/v2/schools/{school_id}/labels (Create assignment label)
Function Add-WootsLabel($parameter) {return Add-WootsSchoolResource -resource "labels" -parameter $parameter}
# Locations: POST /api/v2/schools/{school_id}/locations (Create location)
Function Add-WootsLocation($parameter) {return Add-WootsSchoolResource -resource "locations" -parameter $parameter}
# Periods: POST /api/v2/schools/{school_id}/periods (Create period)
Function Add-WootsPeriod($parameter) {return Add-WootsSchoolResource -resource "periods" -parameter $parameter}
# Users: POST /api/v2/schools/{school_id}/users (Create user)
Function Add-WootsUser($parameter) {return Add-WootsSchoolResource -resource "users" -parameter $parameter}
# Covers: GET /api/v2/assignments/{assignment_id}/cover (Show cover)
Function Get-WootsAssignmentCover($id) { return Get-WootsResourceItem -resource "assignments" -id $id }
# Exercises: GET /api/v2/assignments/{assignment_id}/exercises (List exercises)
Function Get-WootsAssignmentExercise($id) { return Get-WootsResourceItem -resource "assignments" -id $id }
# Publications: GET /api/v2/assignments/{assignment_id}/publication (Show publication)
Function Get-WootsAssignmentPublication($id) { return Get-WootsResourceItem -resource "assignments" -id $id }
# Publication timeslots: GET /api/v2/assignments/{assignment_id}/publication_timeslots (List publication timeslots)
Function Get-WootsAssignmentPublicationTimeslot($id) { return Get-WootsResourceItem -resource "assignments" -id $id }
# Requirements: GET /api/v2/assignments/{assignment_id}/requirements (List requirements)
Function Get-WootsAssignmentRequirement($id) { return Get-WootsResourceItem -resource "assignments" -id $id }
# Results: GET /api/v2/assignments/{assignment_id}/results (List results)
Function Get-WootsAssignmentResult($id) { return Get-WootsResourceItem -resource "assignments" -id $id }
# Score marks: GET /api/v2/assignments/{assignment_id}/score_marks (List score marks)
Function Get-WootsAssignmentScoreMark($id) { return Get-WootsResourceItem -resource "assignments" -id $id }
# Tasks: GET /api/v2/assignments/{assignment_id}/tasks (List assignment tasks)
Function Get-WootsAssignmentTask($id) { return Get-WootsResourceItem -resource "assignments" -id $id }
# Timeslots: GET /api/v2/assignments/{assignment_id}/timeslots (List timeslots)
Function Get-WootsAssignmentTimeslot($id) { return Get-WootsResourceItem -resource "assignments" -id $id }
# Assignments: GET /api/v2/courses/{course_id}/assignments (List assignments)
Function Get-WootsCourseAssignment($id) { return Get-WootsResourceItem -resource "courses" -id $id }
# Courses users: GET /api/v2/courses/{course_id}/courses_users (List course users)
Function Get-WootsCourseCoursesUser($id) { return Get-WootsResourceItem -resource "courses" -id $id }
# Domains: GET /api/v2/courses/{course_id}/domains (List course domains)
Function Get-WootsCourseDomain($id) { return Get-WootsResourceItem -resource "courses" -id $id }
# Groups: GET /api/v2/courses/{course_id}/groups (List groups)
Function Get-WootsCourseGroup($id) { return Get-WootsResourceItem -resource "courses" -id $id }
# Studies: GET /api/v2/departments/{department_id}/studies (List studies)
Function Get-WootsDepartmentStudy($id) { return Get-WootsResourceItem -resource "departments" -id $id }
# Objectives: GET /api/v2/domains/{domain_id}/objectives (List objectives)
Function Get-WootsDomainObjective($id) { return Get-WootsResourceItem -resource "domains" -id $id }
# Questions: GET /api/v2/exercises/{exercise_id}/questions (List questions)
Function Get-WootsExerciseQuestion($id) { return Get-WootsResourceItem -resource "exercises" -id $id }
# Groups users: GET /api/v2/groups/{group_id}/groups_users (List users in group)
Function Get-WootsGroupGroupsUser($id) { return Get-WootsResourceItem -resource "groups" -id $id }
# Subscriptions: GET /api/v2/plans/{plan_id}/subscriptions (List subscriptions)
Function Get-WootsPlanSubscription($id) { return Get-WootsResourceItem -resource "plans" -id $id }
# Plans: GET /api/v2/publishers/{publisher_id}/plans (List plans)
Function Get-WootsPublisherPlan($id) { return Get-WootsResourceItem -resource "publishers" -id $id }
# Covers: GET /api/v2/question_bank_assignments/{question_bank_assignment_id}/cover (Show cover)
Function Get-WootsQuestionBankAssignmentCover($id) { return Get-WootsResourceItem -resource "question_bank_assignments" -id $id }
# Question bank assignments: GET /api/v2/question_bank_assignments/{question_bank_assignment_id}/question_bank_assignment_results (List question bank assignment results)
Function Get-WootsQuestionBankAssignmentQuestionBankAssignmentResult($id) { return Get-WootsResourceItem -resource "question_bank_assignments" -id $id }
# Score marks: GET /api/v2/question_bank_assignments/{question_bank_assignment_id}/score_marks (List question bank assignment score marks)
Function Get-WootsQuestionBankAssignmentScoreMark($id) { return Get-WootsResourceItem -resource "question_bank_assignments" -id $id }
# Blueprints: GET /api/v2/question_banks/{question_bank_id}/blueprints (List blueprints)
Function Get-WootsQuestionBankBlueprint($id) { return Get-WootsResourceItem -resource "question_banks" -id $id }
# Domains: GET /api/v2/question_banks/{question_bank_id}/domains (List question bank domains)
Function Get-WootsQuestionBankDomain($id) { return Get-WootsResourceItem -resource "question_banks" -id $id }
# Question bank assignments: GET /api/v2/question_banks/{question_bank_id}/question_bank_assignments (List question bank assignments)
Function Get-WootsQuestionBankQuestionBankAssignment($id) { return Get-WootsResourceItem -resource "question_banks" -id $id }
# Question bank exercises: GET /api/v2/question_banks/{question_bank_id}/question_bank_exercises (List question bank exercises)
Function Get-WootsQuestionBankQuestionBankExercise($id) { return Get-WootsResourceItem -resource "question_banks" -id $id }
# Question bank exercises: GET /api/v2/question_banks/{question_bank_id}/question_bank_exercises/import (Import question bank exercises)
Function Invoke-WootsGET__api_v2_question_banks__question_bank_id__question_bank_exercises_import() { Throw "This function is not yet implemented"}
# Question bank labels: GET /api/v2/question_banks/{question_bank_id}/question_bank_labels (List question bank labels)
Function Get-WootsQuestionBankQuestionBankLabel($id) { return Get-WootsResourceItem -resource "question_banks" -id $id }
# Tasks: GET /api/v2/question_banks/{question_bank_id}/tasks (List question bank tasks)
Function Get-WootsQuestionBankTask($id) { return Get-WootsResourceItem -resource "question_banks" -id $id }
# Courses users: GET /api/v2/users/{user_id}/courses_users (List user courses)
Function Get-WootsUserCoursesUser($id) { return Get-WootsResourceItem -resource "users" -id $id }
# Groups users: GET /api/v2/users/{user_id}/groups_users (List groups of user)
Function Get-WootsUserGroupsUser($id) { return Get-WootsResourceItem -resource "users" -id $id }
# Classes: GET /api/v2/schools/{school_id}/classes (List Classes)
Function Get-WootsAllClass($id) { return Get-WootsSchoolResources -resource "classes" }
# Courses: GET /api/v2/schools/{school_id}/courses (List courses)
Function Get-WootsAllCourse($id) { return Get-WootsSchoolResources -resource "courses" }
# Departments: GET /api/v2/schools/{school_id}/departments (List departments)
Function Get-WootsAllDepartment($id) { return Get-WootsSchoolResources -resource "departments" }
# Assignment labels: GET /api/v2/schools/{school_id}/labels (List assignment labels)
Function Get-WootsAllLabel($id) { return Get-WootsSchoolResources -resource "labels" }
# Locations: GET /api/v2/schools/{school_id}/locations (List locations)
Function Get-WootsAllLocation($id) { return Get-WootsSchoolResources -resource "locations" }
# Periods: GET /api/v2/schools/{school_id}/periods (List periods)
Function Get-WootsAllPeriod($id) { return Get-WootsSchoolResources -resource "periods" }
# Roles: GET /api/v2/schools/{school_id}/roles (List roles)
Function Get-WootsAllRol($id) { return Get-WootsSchoolResources -resource "roles" }
# Users: GET /api/v2/schools/{school_id}/users (List users)
Function Get-WootsAllUser($id) { return Get-WootsSchoolResources -resource "users" }
# Assignments: DELETE /api/v2/assignments/{id} (Delete assignment)
Function Remove-WootsAssignment($id,$parameter) {return Remove-WootsResourceById -resource "assignments" -id $id -parameter $parameter}
# Classes: DELETE /api/v2/classes/{id} (Delete class)
Function Remove-WootsClass($id,$parameter) {return Remove-WootsResourceById -resource "classes" -id $id -parameter $parameter}
# Comments: DELETE /api/v2/comments/{id} (Destroy comment)
Function Remove-WootsComment($id,$parameter) {return Remove-WootsResourceById -resource "comments" -id $id -parameter $parameter}
# Courses: DELETE /api/v2/courses/{id} (Delete course)
Function Remove-WootsCourse($id,$parameter) {return Remove-WootsResourceById -resource "courses" -id $id -parameter $parameter}
# Courses users: DELETE /api/v2/courses_users/{id} (Delete courses user)
Function Remove-WootsCoursesUser($id,$parameter) {return Remove-WootsResourceById -resource "courses_users" -id $id -parameter $parameter}
# Departments: DELETE /api/v2/departments/{id} (Delete department)
Function Remove-WootsDepartment($id,$parameter) {return Remove-WootsResourceById -resource "departments" -id $id -parameter $parameter}
# Domains: DELETE /api/v2/domains/{id} (Delete domain)
Function Remove-WootsDomain($id,$parameter) {return Remove-WootsResourceById -resource "domains" -id $id -parameter $parameter}
# Exercises: DELETE /api/v2/exercises/{id} (Delete exercise)
Function Remove-WootsExercise($id,$parameter) {return Remove-WootsResourceById -resource "exercises" -id $id -parameter $parameter}
# Groups: DELETE /api/v2/groups/{id} (Delete group)
Function Remove-WootsGroup($id,$parameter) {return Remove-WootsResourceById -resource "groups" -id $id -parameter $parameter}
# Groups users: DELETE /api/v2/groups_users/{id} (Remove user from group)
Function Remove-WootsGroupsUser($id,$parameter) {return Remove-WootsResourceById -resource "groups_users" -id $id -parameter $parameter}
# Assignment labels: DELETE /api/v2/labels/{id} (Delete assignment label)
Function Remove-WootsLabel($id,$parameter) {return Remove-WootsResourceById -resource "labels" -id $id -parameter $parameter}
# Locations: DELETE /api/v2/locations/{id} (Delete location)
Function Remove-WootsLocation($id,$parameter) {return Remove-WootsResourceById -resource "locations" -id $id -parameter $parameter}
# Objectives: DELETE /api/v2/objectives/{id} (Delete objective)
Function Remove-WootsObjective($id,$parameter) {return Remove-WootsResourceById -resource "objectives" -id $id -parameter $parameter}
# Periods: DELETE /api/v2/periods/{id} (Delete period)
Function Remove-WootsPeriod($id,$parameter) {return Remove-WootsResourceById -resource "periods" -id $id -parameter $parameter}
# Plans: DELETE /api/v2/plans/{id} (Delete plan)
Function Remove-WootsPlan($id,$parameter) {return Remove-WootsResourceById -resource "plans" -id $id -parameter $parameter}
# Publication timeslots: DELETE /api/v2/publication_timeslots/{id} (Delete publication timeslot)
Function Remove-WootsPublicationTimeslot($id,$parameter) {return Remove-WootsResourceById -resource "publication_timeslots" -id $id -parameter $parameter}
# Question bank assignments: DELETE /api/v2/question_bank_assignments/{id} (Delete question bank assignment)
Function Remove-WootsQuestionBankAssignment($id,$parameter) {return Remove-WootsResourceById -resource "question_bank_assignments" -id $id -parameter $parameter}
# Question bank exercises: DELETE /api/v2/question_bank_exercises/{id} (Delete question bank exercise)
Function Remove-WootsQuestionBankExercise($id,$parameter) {return Remove-WootsResourceById -resource "question_bank_exercises" -id $id -parameter $parameter}
# Question bank labels: DELETE /api/v2/question_bank_labels/{id} (Delete question bank label)
Function Remove-WootsQuestionBankLabel($id,$parameter) {return Remove-WootsResourceById -resource "question_bank_labels" -id $id -parameter $parameter}
# Question banks: DELETE /api/v2/question_banks/{id} (Delete question bank)
Function Remove-WootsQuestionBank($id,$parameter) {return Remove-WootsResourceById -resource "question_banks" -id $id -parameter $parameter}
# Questions: DELETE /api/v2/questions/{id} (Delete question)
Function Remove-WootsQuestion($id,$parameter) {return Remove-WootsResourceById -resource "questions" -id $id -parameter $parameter}
# Requirements: DELETE /api/v2/requirements/{id}/ (Delete requirement)
Function Remove-WootsRequirement($id,$parameter) {return Remove-WootsResourceById -resource "requirements" -id $id -parameter $parameter}
# Score marks: DELETE /api/v2/score_marks/{id} (Delete score mark)
Function Remove-WootsScoreMark($id,$parameter) {return Remove-WootsResourceById -resource "score_marks" -id $id -parameter $parameter}
# Studies: DELETE /api/v2/studies/{id} (Delete study)
Function Remove-WootsStudy($id,$parameter) {return Remove-WootsResourceById -resource "studies" -id $id -parameter $parameter}
# Subscriptions: DELETE /api/v2/subscriptions/{id} (Delete subscription)
Function Remove-WootsSubscription($id,$parameter) {return Remove-WootsResourceById -resource "subscriptions" -id $id -parameter $parameter}
# Tasks: DELETE /api/v2/tasks/{id} (Delete task)
Function Remove-WootsTask($id,$parameter) {return Remove-WootsResourceById -resource "tasks" -id $id -parameter $parameter}
# Timeslots: DELETE /api/v2/timeslots/{id} (Delete timeslot)
Function Remove-WootsTimeslot($id,$parameter) {return Remove-WootsResourceById -resource "timeslots" -id $id -parameter $parameter}
# Users: DELETE /api/v2/users/{id} (Delete user)
Function Remove-WootsUser($id,$parameter) {return Remove-WootsResourceById -resource "users" -id $id -parameter $parameter}
# Webhooks: DELETE /api/v2/webhooks/{id} (Delete webhook)
Function Remove-WootsWebhook($id,$parameter) {return Remove-WootsResourceById -resource "webhooks" -id $id -parameter $parameter}
# Covers: PATCH /api/v2/assignments/{assignment_id}/cover (Update cover)
Function Set-WootsAssignmentCover($id,$parameter) {return Set-WootsResourceItem -resource "assignments" -id $id -parameter $parameter}
# Publications: PATCH /api/v2/assignments/{assignment_id}/publication (Update publication)
Function Set-WootsAssignmentPublication($id,$parameter) {return Set-WootsResourceItem -resource "assignments" -id $id -parameter $parameter}
# Covers: PATCH /api/v2/question_bank_assignments/{question_bank_assignment_id}/cover (Update cover)
Function Set-WootsQuestionBankAssignmentCover($id,$parameter) {return Set-WootsResourceItem -resource "question_bank_assignments" -id $id -parameter $parameter}
# 185 functions implemented
